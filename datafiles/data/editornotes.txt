Autotiles

make them actually autotile; first don't batch them and have them calculate the autotile version with
math (pretty sure there's old code somewhere that does that) and manually draw with regular old
render_tile; after you know it can choose the correct tile pictures use a shader to set the texture
uvs based on the autotile index/its surroundings so that they can be batched and still work in real
time.

also remember they should be animated.

when they get exported they should stay as autotiles. they don't need to be able to reconfigure
themselves during runtime but some of them may need to be animated.

Loading Assets

Loading meshes/images/audio should stay in the Data menu to make them harder to accidentally modify

Loadable Assets

 - Meshes (global)
 - Tilesets (per map) - texture 0
 - autotiles (per map) - texture 0
 - particle graphics (global) - texture 1
 - audio (global)
 - npc images (global) - texture 2
 - monster images (global) - texture 3

Game Maker texture pages can go up to 8192x8192, although i'd rather not because those will decompress
	to up to 250 mb each (the 4192x4192 texture pages will only be 67 mb, much better) - all four
	of the main texture pages combined will be about 250 mb instead

Map Texture (1) - local

created when a new map is entered - perhaps these should be cached in temporary storage if computing
	this takes a long time

tileset images should not be more than 2048x2048 (25% of each map's 4096x4096 texture)
autotiles should not be more than sixteen 1024x256 (2048x2048 total, 25% of map's texture)
50% of map's texture still remains - you COULD have up to 48 autotiles to fill the space but that
	seems excessive and if there are other map-specific graphics they would go there anyway

Global Texture (2) - global

particles and other graphics may take up half of it: up to 2048 64x64 particle graphics would take
	up 4096x2048, which sounds like a lot, except animated particles can add up quickly so it
	may fill up faster than you expect

NPC Texture (3) - global

npcs should probably not be more than 256x256, so you could fit up to 256 of them on the NPC texture
	page, which sounds like a lot except something tells me it might not be too hard to push the
	limit

Followers Texture (4) - global

because there are probably goign to be a lot of these, they also get their own texture page. because
	there are probably going to be a lot of them, subject them to more rigorous size constraints.
	64x128 ought to do it (they're normally composed of 6 32x32 images). you can fit 2048 of these
	on a texture page.

Serialization

game data itself should probably stored in a way similar to bird game, though maybe not in ds_map strings,
	since those can take up a lot of space and presumably take a long time to decode. maps and the
	global game data will need to be stored separately but might as well follow the same format

Header

size	contents	purpose

3	0x44 * 3	"DDD," so you know what it is more or less
4	uint		version number
4	uint		number of things
4*n	uint		type of thing

Things: resources

0x00000000 (0)		Game/Map	Error, probably? basically null
0x00000001 (1)		Game		Meshes - reference - in case you want to have the vra in included files
						add a global option for this
0x00000002 (2)		Game		Meshes - self-contained - in case you want to embed the meshes in the data file
						and possibly exclude some information that's only useful to the editor?
0x00000003 (3)		Map		Tileset - metadata
0x00000004 (4)		Map		Tileset - base texture only - surface to buffer
0x00000005 (5)		Map		Tileset - autotiles only - surface to buffer
						when you save these, you need to remember to embed the actual image in
						the map, the internal structure that directs the game to the correct
						autotile image is rather spaghetti
0x00000006 (6)		Map		Tileset - everything - surface to buffer
						probably more efficient if you have a dense graphics set and don't want
						the game to re-compute the map texture every time it loads up
0x00000007 (7)		Game		Particles - individual images only
0x00000008 (8)		Game		Global full texture
0x00000009 (9)		Game		NPCs - individual images only
0x0000000A (10)		Game		NPC full texture
0x0000000B (11)		Game		Followers - individual images only
0x0000000C (12)		Game		Followers full texture
0x0000000D (13)		Game		Misc graphics - individual
						you MAY need more than one page of these, depending, so make sure you
						can add more than one to the game without breaking everything
0x0000000E (14)		Game		Misc graphics full texture
0x0000000F (15)		Game		UI graphics - individual
0x00000010 (16)		Game		UI graphics full texture
0x00000011 (17)		Game		Audio - SE - references
0x00000012 (18)		Game		Audio - SE - buffers
						Not sure if embedding the uncompressed sounds as buffers will work but
						might as well try
0x00000013 (19)		Game		Audio - BGM - references
						These are going to be huge, don't bother trying to embed
0x00000014 (20)		Map		Terrain - one or more big old 3D models, more or less stored the same way as
						the normal meshes, except these are obviously local to maps so we don't
						need to have them all on hand at the same time, and shouldn't since they
						will probably be pretty big

Things: game data

0x00000100 (256)	Game		Another error probably?
0x00000101 (257)	Game		Items, monsters, classes, etc; there MAY be other types of assets like icons or
						sound effects for menus and stuff

Things: misc

0x00001000 (4096)	Game		Error
0x00001001 (4097)	Game		Map metadata - individual maps won't be stored because of size concerns (GMS1 is
						32-bit) and, in any case, I wrote the editor so that it can only keep track
						of one at a time
0x00001002 (4098)	Map		The contents of the maps - this will probably be most of the map files
0x00001003 (4099)	Game		Global game data, probably stuff like the title screen and credits screen and stuff
0x00001004 (4100)	Game		UI and menus and stuff, will probably refer a lot to the asset sections

Entities

finish up their properties and editor's UI for accessing those properties

modifications like move as group, group edit

add the create-by-painting effect: an orthographic camera would be really useful for this

old notes
-----------------------------

Doing stuff with the selection:
 - edit properties of everything in the selection
	 - if you have just one thing in the selection it's easy
	 - if you have multiple things of the same type selected and they all have identitical properties it's easy
	 - if you have multiple things of the same type selected and they have different properties, they should be listed as "(multiple)" or something, but changing one will set the properties of the entire selection
	 - if you have multiple things of different types selected, only shared (inherited) properties should be editable following the above rules, i.e. 3D position and the basic data for multiple classes of NPC
 - copy contents
 - cut contents (copy and delete originals)
 - paste contents

Properties: Map
 - width, height, depth
 - tileset used

Properties: Entity
 - x, y, z position, color?
 - is static or dynamic?
 - is solid?
 - name

Properties: Entity\Tile
 - u, v texture coordinates

Properties: Entity\Mesh
 - mesh (name, id, or something else)

Now:
 - every mesh entity should store the name string of its mesh and not its
	index or id or something, because when they're loaded into the
	game itself they're supposed to be random-access and should only
	need to be looked up on map load or entity change
 - in the editor, names should be sorted into an alphabetized list
	(tree) to make it easy to display in the editor's ui, but
	there should probably also be a hash map of the names the
	same way the game has?
 - if you remove a vrax or close the editor, modify a required one and
	reopen the editor, mesh entities that use meshes that can no
	longer be identified should have some kind of warning symbol at
	their position in 3D space (probably for their origin plus any
	cells which they occupy as "solid"), and there should be a nice
	warning dialog immediately as the program starts
 - when adding a new vrax there should be a notice that if you modify
	the original vrax the changes won't be known to the editor until
	you re-load it, since it's going to have to be copied to the
	appdata folder in order to comply with the game maker sandbox;
	it may be nice to have a "do not show this warning again" option,
	and by extension a "reset warnings" button somewhere

 - when you change selection from mesh to something that is not mesh,
hide the mesh selector and swap in the appropriate options (tile picker
for tiles, mob type probably, effect type probably)
 - selecting an entitymesh should show the whole bounding box, not just
the footprint; mobs and particles should probably be similar
 - probably some other stuff
 - talk to relic people?

 - better deleting mechanism (instead of ds_list_delete-ing constantly, it
would probably be faster to re-create the list)

 - control+a for select all (this will be more complicated than it sounds
owing to the different entity types), and likely other keyboard shortcuts
	 - detection of the control key should override detection of wasd
	for moving around

commit notes

tomorrow

implement autotiles and the ability to draw (click and drag to fill) with all entity types, and make
	autotiles respond correctly when you do that; also remember to give them the usual tile properties
	for things like passability, etc (there are variables for this but nothing does anything yet)

maybe the undo/redo stack is a bit unnecessary for the moment but at least being able to copy/paste tile
	data and possibly set large swaths at once (all types of path, for example) would be pretty helpful