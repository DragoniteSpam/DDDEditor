<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Data</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// This is analagous to an "event page" in RPG Maker
event_inherited();

name="instantiated event";

// conditions - these just mirror RPG Maker currently. I'm not sure if all, if any, will
// be used and will probably try to figure out how to implement Lua or something instead

disabled=false;

condition_switch_global=0;
condition_switch_self=0;
condition_variable_global=0;
condition_variable_self=0;
condition_item=0;
condition_actor=0;
condition_script=0;

// autonomous movement - only useful for things not marked as "static"

autonomous_movement=AutonomousMovementTypes.FIXED;
autonomous_movement_speed=3;                            // 0: 0.125, 1: 0.25, 2: 0.5, 3: 1, 4: 2, 5: 4
autonomous_movement_frequency=2;                        // 0 through 4
autonomous_movement_route=ds_list_create();
autonomous_movement_route_repeat=true;
autonomous_movement_route_skip=false;

enum AutonomousMovementTypes {
    FIXED,
    RANDOM,
    APPROACH,
    CUSTOM
}

// options

option_animate_movement=true;                   // "walking" in RPG Maker
option_animate_idle=false;                      // "stepping" in RPG Maker
option_direction_fix=false;
// option_through=false;                        // handled by entity "solid" attributes

// trigger

trigger=EventTriggers.ActionButton;

enum EventTriggers {
    ActionButton,
    PlayerTouch,
    EventTouch,
    Autorun,
    Parallel,
}

// not used: Image (since events are attached to entities)
// not used: Priority (since priority is attached to entities)

// the important bit

event_guid=0;
event_entrypoint="";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

ds_list_destroy(autonomous_movement_route);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
