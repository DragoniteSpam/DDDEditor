<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
 * Projection variables
 */

x=0;
y=0;
z=100;

xto=512;
yto=512;
zto=0;

xup=0;
yup=0;
zup=1;

fov=50;
pitch=0;

/*
 * Raycasting stuff
 */

MOUSE_X=window_mouse_get_x();
MOUSE_Y=window_mouse_get_y();

mouse_vector=array_compose(1, 1, 1);

/*
 * Vertex formats
 */

draw_set_alpha_test(true);

vertex_format_begin();
vertex_format_add_position_3d();
vertex_format_add_normal();
vertex_format_add_textcoord();
vertex_format_add_colour();
vertex_format=vertex_format_end();

vertex_format_begin();
vertex_format_add_position_3d();
vertex_format_add_colour();
vertex_format_line=vertex_format_end();

grid=noone;
graphics_create_grid();

/*
 * selection stuff
 */

under_cursor=noone;

selection=ds_list_create();
last_selection=noone;

selection_mode=SelectionModes.RECTANGLE;
selection_addition=false;

selection_fill_type=ETypes.TILE;

selection_fill_mesh=0;

view_wireframe=false;
view_grid=true;
view_backface=false;

/*
 * inputs; maybe these can be rebound though a menu, but that's not important now
 */

input_selection_add=vk_control;

/*
 * other stuff
 */

changes=ds_list_create();
ui=instance_create(0, 0, UIMain);
menu=instance_create(0, 0, MenuMain);
dialogs=ds_list_create();

stuff_to_destroy=ds_queue_create();

instance_deactivate_object(UIThing);

/*
 * preview stuff
 */

mesh_preview=noone;
mesh_x=0;
mesh_y=0;
mesh_z=0;
mesh_xrot=0;
mesh_yrot=0;
mesh_zrot=0;
mesh_scale=1;

mesh_preview_grid=vertex_create_buffer();
vertex_begin(mesh_preview_grid, vertex_format_line);

var x1=-6*TILE_WIDTH;
var y1=-6*TILE_HEIGHT;
var x2=-x1;
var y2=-y1;
for (var i=0; i&lt;=12; i++){
    vertex_point_line(mesh_preview_grid, x1+i*TILE_WIDTH, y1, 0, c_white, 1);
    vertex_point_line(mesh_preview_grid, x1+i*TILE_WIDTH, y2, 0, c_white, 1);
    
    vertex_point_line(mesh_preview_grid, x1, y1+i*TILE_HEIGHT, 0, c_white, 1);
    vertex_point_line(mesh_preview_grid, x2, y1+i*TILE_HEIGHT, 0, c_white, 1);
}

vertex_end(mesh_preview_grid);
vertex_freeze(mesh_preview_grid);

/*
 * enumerated constants that i need
 */

enum vec3 {
    xx,
    yy,
    zz
}

enum SelectionModes {
    SINGLE,
    RECTANGLE,
    CIRCLE
}

enum ETypes {
    TILE,
    MESH,
    PAWN,
    EFFECT,
}

etypes=array_compose(safc_fill_tile, safc_fill_mesh, safc_fill_pawn, safc_fill_event);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the camera

MOUSE_X=window_mouse_get_x();
MOUSE_Y=window_mouse_get_y();

if (!dialog_exists()){
    var mspd=(min(log10(max(abs(z), 1))*4, 320)+1)/Stuff.dt;
    var xspeed=0;
    var yspeed=0;
    var zspeed=0;
    
    if (keyboard_check(vk_up)||keyboard_check(ord('W'))){
        xspeed=dcos(direction)*mspd*Stuff.dt;
        yspeed=-dsin(direction)*mspd*Stuff.dt;
        zspeed=-dsin(pitch)*mspd*Stuff.dt;
    }
    if (keyboard_check(vk_down)||keyboard_check(ord('S'))){
        xspeed=-dcos(direction)*mspd*Stuff.dt;
        yspeed=dsin(direction)*mspd*Stuff.dt;
        zspeed=dsin(pitch)*mspd*Stuff.dt;
    }
    if (keyboard_check(vk_left)||keyboard_check(ord('A'))){
        xspeed=-dsin(direction)*mspd*Stuff.dt;
        yspeed=-dcos(direction)*mspd*Stuff.dt;
    }
    if (keyboard_check(vk_right)||keyboard_check(ord('D'))){
        xspeed=dsin(direction)*mspd*Stuff.dt;
        yspeed=dcos(direction)*mspd*Stuff.dt;
    }
    if (Controller.mouse_middle){
        var dx=(MOUSE_X-CW/2)/16;
        var dy=(MOUSE_Y-CH/2)/16;
        direction=(360+direction-dx)%360;
        pitch=clamp(pitch+dy, -80, 80);
        window_mouse_set(CW/2, CH/2);
        xto=x+dcos(direction);
        yto=y-dsin(direction);
        zto=z-dsin(pitch);
    }
    
    x+=xspeed;
    y+=yspeed;
    z+=zspeed;
    xto+=xspeed;
    yto+=yspeed;
    zto+=zspeed;
    xup=0;
    yup=0;
    zup=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// step cleanup actions
// dialogs (or other things) to be killed

while (!ds_queue_empty(stuff_to_destroy)){
    var thing=ds_queue_dequeue(stuff_to_destroy);
    instance_activate_object(thing);
    instance_destroy(thing);
}

// batch updates

var future=ActiveMap.batch_in_the_future;

for (var i=0; i&lt;ds_list_size(changes); i++){
    var thing=changes[| i];
    switch (thing.modification){
        case Modifications.CREATE:
            instance_deactivate_object(thing);
            break;
        case Modifications.UPDATE:
            if (thing.batch_index==-1){
            } else {
            }
            break;
        case Modifications.REMOVE:
            // this is INSANELY slow for large numbers of entities, and I'm
            // actually not sure how long it would take to carry out if you
            // did something like select all+delete. long enough that most
            // people would get frusturated and restart the program.
            
            // this is thanks to the ds_list_find_index and NEEDS to be
            // worked on. a starting point would be to assign each instance
            // a variable storing the location in the future list or batch
            // instance list. however, that will also be slow due to the
            // need to update the stored index of each other entity in the
            // lists: it would probably be better to zero out the indices
            // instead of deleteting them first, and then at the end make a
            // second pass over each of the lists, removing the zeroes and
            // updating the variables storing the indices for the entities.
            
            // this NEEDS to be worked on sooner rather than later because i
            // imagine Delete All is going to be a somewhat common operation.
            if (thing.batch_index==-1){
                ds_list_delete(future, ds_list_find_index(future, thing));
            } else {
                var bl=ActiveMap.batch_instances[| thing.batch_index];
                ds_list_delete(bl, ds_list_find_index(bl, thing));
                batch_again(thing.batch_index);
            }
            ds_list_delete(ActiveMap.all_entities, ds_list_find_index(ActiveMap.all_entities, thing));
            instance_activate_object(thing);
            instance_destroy(thing);
            break;
    }
}

ds_list_clear(changes);

// you may add/delete/move stuff in bulk and doing this for each
// entity that was changed would slow the editor down quite a lot
if (ds_list_size(ActiveMap.batch_in_the_future)&gt;BATCH_CACHE_SIZE){
    batch_cache();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Anything visible in the world

switch (view_current){
    case 0:
        draw_editor_3d();
        draw_editor_menu();
        break;
    case 1:
        draw_editor_hud();
        break;
    case 2:
        draw_preview_3d();
        draw_preview_3d_overlay();
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
